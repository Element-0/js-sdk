"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
Object.defineProperty(exports, "__esModule", { value: true });
const flatbuffers = require("./flatbuffers");
const NS11546202406788532957 = require("./uuid_generated");
/**
 * @constructor
 */
var Mod;
(function (Mod) {
    var proto;
    (function (proto) {
        class ChatEvent {
            constructor() {
                this.bb = null;
                this.bb_pos = 0;
            }
            /**
             * @param number i
             * @param flatbuffers.ByteBuffer bb
             * @returns ChatEvent
             */
            __init(i, bb) {
                this.bb_pos = i;
                this.bb = bb;
                return this;
            }
            ;
            /**
             * @param flatbuffers.ByteBuffer bb
             * @param ChatEvent= obj
             * @returns ChatEvent
             */
            static getRootAsChatEvent(bb, obj) {
                return (obj || new ChatEvent()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
            }
            ;
            /**
             * @param flatbuffers.ByteBuffer bb
             * @param ChatEvent= obj
             * @returns ChatEvent
             */
            static getSizePrefixedRootAsChatEvent(bb, obj) {
                bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
                return (obj || new ChatEvent()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
            }
            ;
            /**
             * @param Mod.proto.UUID= obj
             * @returns Mod.proto.UUID|null
             */
            from(obj) {
                var offset = this.bb.__offset(this.bb_pos, 4);
                return offset ? (obj || new NS11546202406788532957.Mod.proto.UUID()).__init(this.bb_pos + offset, this.bb) : null;
            }
            ;
            displayName(optionalEncoding) {
                var offset = this.bb.__offset(this.bb_pos, 6);
                return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
            }
            ;
            content(optionalEncoding) {
                var offset = this.bb.__offset(this.bb_pos, 8);
                return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
            }
            ;
            /**
             * @param flatbuffers.Builder builder
             */
            static startChatEvent(builder) {
                builder.startObject(3);
            }
            ;
            /**
             * @param flatbuffers.Builder builder
             * @param flatbuffers.Offset fromOffset
             */
            static addFrom(builder, fromOffset) {
                builder.addFieldStruct(0, fromOffset, 0);
            }
            ;
            /**
             * @param flatbuffers.Builder builder
             * @param flatbuffers.Offset displayNameOffset
             */
            static addDisplayName(builder, displayNameOffset) {
                builder.addFieldOffset(1, displayNameOffset, 0);
            }
            ;
            /**
             * @param flatbuffers.Builder builder
             * @param flatbuffers.Offset contentOffset
             */
            static addContent(builder, contentOffset) {
                builder.addFieldOffset(2, contentOffset, 0);
            }
            ;
            /**
             * @param flatbuffers.Builder builder
             * @returns flatbuffers.Offset
             */
            static endChatEvent(builder) {
                var offset = builder.endObject();
                return offset;
            }
            ;
            static createChatEvent(builder, fromOffset, displayNameOffset, contentOffset) {
                ChatEvent.startChatEvent(builder);
                ChatEvent.addFrom(builder, fromOffset);
                ChatEvent.addDisplayName(builder, displayNameOffset);
                ChatEvent.addContent(builder, contentOffset);
                return ChatEvent.endChatEvent(builder);
            }
        }
        proto.ChatEvent = ChatEvent;
    })(proto = Mod.proto || (Mod.proto = {}));
})(Mod = exports.Mod || (exports.Mod = {}));
