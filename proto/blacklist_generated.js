"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
Object.defineProperty(exports, "__esModule", { value: true });
const flatbuffers = require("./flatbuffers");
const NS11546202406788532957 = require("./uuid_generated");
/**
 * @enum {number}
 */
var Mod;
(function (Mod) {
    var proto;
    (function (proto) {
        var blacklist;
        (function (blacklist) {
            let Op;
            (function (Op) {
                Op[Op["NONE"] = 0] = "NONE";
                Op[Op["AddUUID"] = 1] = "AddUUID";
                Op[Op["RemoveUUID"] = 2] = "RemoveUUID";
                Op[Op["AddXUID"] = 3] = "AddXUID";
                Op[Op["RemoveXUID"] = 4] = "RemoveXUID";
                Op[Op["AddNAME"] = 5] = "AddNAME";
                Op[Op["RemoveNAME"] = 6] = "RemoveNAME";
            })(Op = blacklist.Op || (blacklist.Op = {}));
        })(blacklist = proto.blacklist || (proto.blacklist = {}));
    })(proto = Mod.proto || (Mod.proto = {}));
})(Mod = exports.Mod || (exports.Mod = {}));
;
/**
 * @constructor
 */
(function (Mod) {
    var proto;
    (function (proto) {
        var blacklist;
        (function (blacklist) {
            class BlacklistOp {
                constructor() {
                    this.bb = null;
                    this.bb_pos = 0;
                }
                /**
                 * @param number i
                 * @param flatbuffers.ByteBuffer bb
                 * @returns BlacklistOp
                 */
                __init(i, bb) {
                    this.bb_pos = i;
                    this.bb = bb;
                    return this;
                }
                ;
                /**
                 * @param flatbuffers.ByteBuffer bb
                 * @param BlacklistOp= obj
                 * @returns BlacklistOp
                 */
                static getRootAsBlacklistOp(bb, obj) {
                    return (obj || new BlacklistOp()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
                }
                ;
                /**
                 * @param flatbuffers.ByteBuffer bb
                 * @param BlacklistOp= obj
                 * @returns BlacklistOp
                 */
                static getSizePrefixedRootAsBlacklistOp(bb, obj) {
                    bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
                    return (obj || new BlacklistOp()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
                }
                ;
                /**
                 * @returns Mod.proto.blacklist.Op
                 */
                opType() {
                    var offset = this.bb.__offset(this.bb_pos, 4);
                    return offset ? /**  */ (this.bb.readUint8(this.bb_pos + offset)) : Mod.proto.blacklist.Op.NONE;
                }
                ;
                /**
                 * @param flatbuffers.Table obj
                 * @returns ?flatbuffers.Table
                 */
                op(obj) {
                    var offset = this.bb.__offset(this.bb_pos, 6);
                    return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
                }
                ;
                /**
                 * @param flatbuffers.Builder builder
                 */
                static startBlacklistOp(builder) {
                    builder.startObject(2);
                }
                ;
                /**
                 * @param flatbuffers.Builder builder
                 * @param Mod.proto.blacklist.Op opType
                 */
                static addOpType(builder, opType) {
                    builder.addFieldInt8(0, opType, Mod.proto.blacklist.Op.NONE);
                }
                ;
                /**
                 * @param flatbuffers.Builder builder
                 * @param flatbuffers.Offset opOffset
                 */
                static addOp(builder, opOffset) {
                    builder.addFieldOffset(1, opOffset, 0);
                }
                ;
                /**
                 * @param flatbuffers.Builder builder
                 * @returns flatbuffers.Offset
                 */
                static endBlacklistOp(builder) {
                    var offset = builder.endObject();
                    return offset;
                }
                ;
                /**
                 * @param flatbuffers.Builder builder
                 * @param flatbuffers.Offset offset
                 */
                static finishBlacklistOpBuffer(builder, offset) {
                    builder.finish(offset);
                }
                ;
                /**
                 * @param flatbuffers.Builder builder
                 * @param flatbuffers.Offset offset
                 */
                static finishSizePrefixedBlacklistOpBuffer(builder, offset) {
                    builder.finish(offset, undefined, true);
                }
                ;
                static createBlacklistOp(builder, opType, opOffset) {
                    BlacklistOp.startBlacklistOp(builder);
                    BlacklistOp.addOpType(builder, opType);
                    BlacklistOp.addOp(builder, opOffset);
                    return BlacklistOp.endBlacklistOp(builder);
                }
            }
            blacklist.BlacklistOp = BlacklistOp;
        })(blacklist = proto.blacklist || (proto.blacklist = {}));
    })(proto = Mod.proto || (Mod.proto = {}));
})(Mod = exports.Mod || (exports.Mod = {}));
/**
 * @constructor
 */
(function (Mod) {
    var proto;
    (function (proto) {
        var blacklist;
        (function (blacklist) {
            class AddUUID {
                constructor() {
                    this.bb = null;
                    this.bb_pos = 0;
                }
                /**
                 * @param number i
                 * @param flatbuffers.ByteBuffer bb
                 * @returns AddUUID
                 */
                __init(i, bb) {
                    this.bb_pos = i;
                    this.bb = bb;
                    return this;
                }
                ;
                /**
                 * @param flatbuffers.ByteBuffer bb
                 * @param AddUUID= obj
                 * @returns AddUUID
                 */
                static getRootAsAddUUID(bb, obj) {
                    return (obj || new AddUUID()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
                }
                ;
                /**
                 * @param flatbuffers.ByteBuffer bb
                 * @param AddUUID= obj
                 * @returns AddUUID
                 */
                static getSizePrefixedRootAsAddUUID(bb, obj) {
                    bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
                    return (obj || new AddUUID()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
                }
                ;
                /**
                 * @param Mod.proto.UUID= obj
                 * @returns Mod.proto.UUID|null
                 */
                value(obj) {
                    var offset = this.bb.__offset(this.bb_pos, 4);
                    return offset ? (obj || new NS11546202406788532957.Mod.proto.UUID()).__init(this.bb_pos + offset, this.bb) : null;
                }
                ;
                name(optionalEncoding) {
                    var offset = this.bb.__offset(this.bb_pos, 6);
                    return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
                }
                ;
                reason(optionalEncoding) {
                    var offset = this.bb.__offset(this.bb_pos, 8);
                    return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
                }
                ;
                op(optionalEncoding) {
                    var offset = this.bb.__offset(this.bb_pos, 10);
                    return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
                }
                ;
                /**
                 * @param flatbuffers.Builder builder
                 */
                static startAddUUID(builder) {
                    builder.startObject(4);
                }
                ;
                /**
                 * @param flatbuffers.Builder builder
                 * @param flatbuffers.Offset valueOffset
                 */
                static addValue(builder, valueOffset) {
                    builder.addFieldStruct(0, valueOffset, 0);
                }
                ;
                /**
                 * @param flatbuffers.Builder builder
                 * @param flatbuffers.Offset nameOffset
                 */
                static addName(builder, nameOffset) {
                    builder.addFieldOffset(1, nameOffset, 0);
                }
                ;
                /**
                 * @param flatbuffers.Builder builder
                 * @param flatbuffers.Offset reasonOffset
                 */
                static addReason(builder, reasonOffset) {
                    builder.addFieldOffset(2, reasonOffset, 0);
                }
                ;
                /**
                 * @param flatbuffers.Builder builder
                 * @param flatbuffers.Offset opOffset
                 */
                static addOp(builder, opOffset) {
                    builder.addFieldOffset(3, opOffset, 0);
                }
                ;
                /**
                 * @param flatbuffers.Builder builder
                 * @returns flatbuffers.Offset
                 */
                static endAddUUID(builder) {
                    var offset = builder.endObject();
                    builder.requiredField(offset, 4); // value
                    return offset;
                }
                ;
                static createAddUUID(builder, valueOffset, nameOffset, reasonOffset, opOffset) {
                    AddUUID.startAddUUID(builder);
                    AddUUID.addValue(builder, valueOffset);
                    AddUUID.addName(builder, nameOffset);
                    AddUUID.addReason(builder, reasonOffset);
                    AddUUID.addOp(builder, opOffset);
                    return AddUUID.endAddUUID(builder);
                }
            }
            blacklist.AddUUID = AddUUID;
        })(blacklist = proto.blacklist || (proto.blacklist = {}));
    })(proto = Mod.proto || (Mod.proto = {}));
})(Mod = exports.Mod || (exports.Mod = {}));
/**
 * @constructor
 */
(function (Mod) {
    var proto;
    (function (proto) {
        var blacklist;
        (function (blacklist) {
            class RemoveUUID {
                constructor() {
                    this.bb = null;
                    this.bb_pos = 0;
                }
                /**
                 * @param number i
                 * @param flatbuffers.ByteBuffer bb
                 * @returns RemoveUUID
                 */
                __init(i, bb) {
                    this.bb_pos = i;
                    this.bb = bb;
                    return this;
                }
                ;
                /**
                 * @param flatbuffers.ByteBuffer bb
                 * @param RemoveUUID= obj
                 * @returns RemoveUUID
                 */
                static getRootAsRemoveUUID(bb, obj) {
                    return (obj || new RemoveUUID()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
                }
                ;
                /**
                 * @param flatbuffers.ByteBuffer bb
                 * @param RemoveUUID= obj
                 * @returns RemoveUUID
                 */
                static getSizePrefixedRootAsRemoveUUID(bb, obj) {
                    bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
                    return (obj || new RemoveUUID()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
                }
                ;
                /**
                 * @param Mod.proto.UUID= obj
                 * @returns Mod.proto.UUID|null
                 */
                value(obj) {
                    var offset = this.bb.__offset(this.bb_pos, 4);
                    return offset ? (obj || new NS11546202406788532957.Mod.proto.UUID()).__init(this.bb_pos + offset, this.bb) : null;
                }
                ;
                /**
                 * @param flatbuffers.Builder builder
                 */
                static startRemoveUUID(builder) {
                    builder.startObject(1);
                }
                ;
                /**
                 * @param flatbuffers.Builder builder
                 * @param flatbuffers.Offset valueOffset
                 */
                static addValue(builder, valueOffset) {
                    builder.addFieldStruct(0, valueOffset, 0);
                }
                ;
                /**
                 * @param flatbuffers.Builder builder
                 * @returns flatbuffers.Offset
                 */
                static endRemoveUUID(builder) {
                    var offset = builder.endObject();
                    builder.requiredField(offset, 4); // value
                    return offset;
                }
                ;
                static createRemoveUUID(builder, valueOffset) {
                    RemoveUUID.startRemoveUUID(builder);
                    RemoveUUID.addValue(builder, valueOffset);
                    return RemoveUUID.endRemoveUUID(builder);
                }
            }
            blacklist.RemoveUUID = RemoveUUID;
        })(blacklist = proto.blacklist || (proto.blacklist = {}));
    })(proto = Mod.proto || (Mod.proto = {}));
})(Mod = exports.Mod || (exports.Mod = {}));
/**
 * @constructor
 */
(function (Mod) {
    var proto;
    (function (proto) {
        var blacklist;
        (function (blacklist) {
            class AddXUID {
                constructor() {
                    this.bb = null;
                    this.bb_pos = 0;
                }
                /**
                 * @param number i
                 * @param flatbuffers.ByteBuffer bb
                 * @returns AddXUID
                 */
                __init(i, bb) {
                    this.bb_pos = i;
                    this.bb = bb;
                    return this;
                }
                ;
                /**
                 * @param flatbuffers.ByteBuffer bb
                 * @param AddXUID= obj
                 * @returns AddXUID
                 */
                static getRootAsAddXUID(bb, obj) {
                    return (obj || new AddXUID()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
                }
                ;
                /**
                 * @param flatbuffers.ByteBuffer bb
                 * @param AddXUID= obj
                 * @returns AddXUID
                 */
                static getSizePrefixedRootAsAddXUID(bb, obj) {
                    bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
                    return (obj || new AddXUID()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
                }
                ;
                /**
                 * @returns flatbuffers.Long
                 */
                value() {
                    var offset = this.bb.__offset(this.bb_pos, 4);
                    return offset ? this.bb.readUint64(this.bb_pos + offset) : this.bb.createLong(0, 0);
                }
                ;
                name(optionalEncoding) {
                    var offset = this.bb.__offset(this.bb_pos, 6);
                    return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
                }
                ;
                reason(optionalEncoding) {
                    var offset = this.bb.__offset(this.bb_pos, 8);
                    return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
                }
                ;
                op(optionalEncoding) {
                    var offset = this.bb.__offset(this.bb_pos, 10);
                    return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
                }
                ;
                /**
                 * @param flatbuffers.Builder builder
                 */
                static startAddXUID(builder) {
                    builder.startObject(4);
                }
                ;
                /**
                 * @param flatbuffers.Builder builder
                 * @param flatbuffers.Long value
                 */
                static addValue(builder, value) {
                    builder.addFieldInt64(0, value, builder.createLong(0, 0));
                }
                ;
                /**
                 * @param flatbuffers.Builder builder
                 * @param flatbuffers.Offset nameOffset
                 */
                static addName(builder, nameOffset) {
                    builder.addFieldOffset(1, nameOffset, 0);
                }
                ;
                /**
                 * @param flatbuffers.Builder builder
                 * @param flatbuffers.Offset reasonOffset
                 */
                static addReason(builder, reasonOffset) {
                    builder.addFieldOffset(2, reasonOffset, 0);
                }
                ;
                /**
                 * @param flatbuffers.Builder builder
                 * @param flatbuffers.Offset opOffset
                 */
                static addOp(builder, opOffset) {
                    builder.addFieldOffset(3, opOffset, 0);
                }
                ;
                /**
                 * @param flatbuffers.Builder builder
                 * @returns flatbuffers.Offset
                 */
                static endAddXUID(builder) {
                    var offset = builder.endObject();
                    return offset;
                }
                ;
                static createAddXUID(builder, value, nameOffset, reasonOffset, opOffset) {
                    AddXUID.startAddXUID(builder);
                    AddXUID.addValue(builder, value);
                    AddXUID.addName(builder, nameOffset);
                    AddXUID.addReason(builder, reasonOffset);
                    AddXUID.addOp(builder, opOffset);
                    return AddXUID.endAddXUID(builder);
                }
            }
            blacklist.AddXUID = AddXUID;
        })(blacklist = proto.blacklist || (proto.blacklist = {}));
    })(proto = Mod.proto || (Mod.proto = {}));
})(Mod = exports.Mod || (exports.Mod = {}));
/**
 * @constructor
 */
(function (Mod) {
    var proto;
    (function (proto) {
        var blacklist;
        (function (blacklist) {
            class RemoveXUID {
                constructor() {
                    this.bb = null;
                    this.bb_pos = 0;
                }
                /**
                 * @param number i
                 * @param flatbuffers.ByteBuffer bb
                 * @returns RemoveXUID
                 */
                __init(i, bb) {
                    this.bb_pos = i;
                    this.bb = bb;
                    return this;
                }
                ;
                /**
                 * @param flatbuffers.ByteBuffer bb
                 * @param RemoveXUID= obj
                 * @returns RemoveXUID
                 */
                static getRootAsRemoveXUID(bb, obj) {
                    return (obj || new RemoveXUID()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
                }
                ;
                /**
                 * @param flatbuffers.ByteBuffer bb
                 * @param RemoveXUID= obj
                 * @returns RemoveXUID
                 */
                static getSizePrefixedRootAsRemoveXUID(bb, obj) {
                    bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
                    return (obj || new RemoveXUID()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
                }
                ;
                /**
                 * @returns flatbuffers.Long
                 */
                value() {
                    var offset = this.bb.__offset(this.bb_pos, 4);
                    return offset ? this.bb.readUint64(this.bb_pos + offset) : this.bb.createLong(0, 0);
                }
                ;
                /**
                 * @param flatbuffers.Builder builder
                 */
                static startRemoveXUID(builder) {
                    builder.startObject(1);
                }
                ;
                /**
                 * @param flatbuffers.Builder builder
                 * @param flatbuffers.Long value
                 */
                static addValue(builder, value) {
                    builder.addFieldInt64(0, value, builder.createLong(0, 0));
                }
                ;
                /**
                 * @param flatbuffers.Builder builder
                 * @returns flatbuffers.Offset
                 */
                static endRemoveXUID(builder) {
                    var offset = builder.endObject();
                    return offset;
                }
                ;
                static createRemoveXUID(builder, value) {
                    RemoveXUID.startRemoveXUID(builder);
                    RemoveXUID.addValue(builder, value);
                    return RemoveXUID.endRemoveXUID(builder);
                }
            }
            blacklist.RemoveXUID = RemoveXUID;
        })(blacklist = proto.blacklist || (proto.blacklist = {}));
    })(proto = Mod.proto || (Mod.proto = {}));
})(Mod = exports.Mod || (exports.Mod = {}));
/**
 * @constructor
 */
(function (Mod) {
    var proto;
    (function (proto) {
        var blacklist;
        (function (blacklist) {
            class AddNAME {
                constructor() {
                    this.bb = null;
                    this.bb_pos = 0;
                }
                /**
                 * @param number i
                 * @param flatbuffers.ByteBuffer bb
                 * @returns AddNAME
                 */
                __init(i, bb) {
                    this.bb_pos = i;
                    this.bb = bb;
                    return this;
                }
                ;
                /**
                 * @param flatbuffers.ByteBuffer bb
                 * @param AddNAME= obj
                 * @returns AddNAME
                 */
                static getRootAsAddNAME(bb, obj) {
                    return (obj || new AddNAME()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
                }
                ;
                /**
                 * @param flatbuffers.ByteBuffer bb
                 * @param AddNAME= obj
                 * @returns AddNAME
                 */
                static getSizePrefixedRootAsAddNAME(bb, obj) {
                    bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
                    return (obj || new AddNAME()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
                }
                ;
                value(optionalEncoding) {
                    var offset = this.bb.__offset(this.bb_pos, 4);
                    return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
                }
                ;
                reason(optionalEncoding) {
                    var offset = this.bb.__offset(this.bb_pos, 6);
                    return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
                }
                ;
                op(optionalEncoding) {
                    var offset = this.bb.__offset(this.bb_pos, 8);
                    return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
                }
                ;
                /**
                 * @param flatbuffers.Builder builder
                 */
                static startAddNAME(builder) {
                    builder.startObject(3);
                }
                ;
                /**
                 * @param flatbuffers.Builder builder
                 * @param flatbuffers.Offset valueOffset
                 */
                static addValue(builder, valueOffset) {
                    builder.addFieldOffset(0, valueOffset, 0);
                }
                ;
                /**
                 * @param flatbuffers.Builder builder
                 * @param flatbuffers.Offset reasonOffset
                 */
                static addReason(builder, reasonOffset) {
                    builder.addFieldOffset(1, reasonOffset, 0);
                }
                ;
                /**
                 * @param flatbuffers.Builder builder
                 * @param flatbuffers.Offset opOffset
                 */
                static addOp(builder, opOffset) {
                    builder.addFieldOffset(2, opOffset, 0);
                }
                ;
                /**
                 * @param flatbuffers.Builder builder
                 * @returns flatbuffers.Offset
                 */
                static endAddNAME(builder) {
                    var offset = builder.endObject();
                    builder.requiredField(offset, 4); // value
                    return offset;
                }
                ;
                static createAddNAME(builder, valueOffset, reasonOffset, opOffset) {
                    AddNAME.startAddNAME(builder);
                    AddNAME.addValue(builder, valueOffset);
                    AddNAME.addReason(builder, reasonOffset);
                    AddNAME.addOp(builder, opOffset);
                    return AddNAME.endAddNAME(builder);
                }
            }
            blacklist.AddNAME = AddNAME;
        })(blacklist = proto.blacklist || (proto.blacklist = {}));
    })(proto = Mod.proto || (Mod.proto = {}));
})(Mod = exports.Mod || (exports.Mod = {}));
/**
 * @constructor
 */
(function (Mod) {
    var proto;
    (function (proto) {
        var blacklist;
        (function (blacklist) {
            class RemoveNAME {
                constructor() {
                    this.bb = null;
                    this.bb_pos = 0;
                }
                /**
                 * @param number i
                 * @param flatbuffers.ByteBuffer bb
                 * @returns RemoveNAME
                 */
                __init(i, bb) {
                    this.bb_pos = i;
                    this.bb = bb;
                    return this;
                }
                ;
                /**
                 * @param flatbuffers.ByteBuffer bb
                 * @param RemoveNAME= obj
                 * @returns RemoveNAME
                 */
                static getRootAsRemoveNAME(bb, obj) {
                    return (obj || new RemoveNAME()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
                }
                ;
                /**
                 * @param flatbuffers.ByteBuffer bb
                 * @param RemoveNAME= obj
                 * @returns RemoveNAME
                 */
                static getSizePrefixedRootAsRemoveNAME(bb, obj) {
                    bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
                    return (obj || new RemoveNAME()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
                }
                ;
                value(optionalEncoding) {
                    var offset = this.bb.__offset(this.bb_pos, 4);
                    return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
                }
                ;
                /**
                 * @param flatbuffers.Builder builder
                 */
                static startRemoveNAME(builder) {
                    builder.startObject(1);
                }
                ;
                /**
                 * @param flatbuffers.Builder builder
                 * @param flatbuffers.Offset valueOffset
                 */
                static addValue(builder, valueOffset) {
                    builder.addFieldOffset(0, valueOffset, 0);
                }
                ;
                /**
                 * @param flatbuffers.Builder builder
                 * @returns flatbuffers.Offset
                 */
                static endRemoveNAME(builder) {
                    var offset = builder.endObject();
                    builder.requiredField(offset, 4); // value
                    return offset;
                }
                ;
                static createRemoveNAME(builder, valueOffset) {
                    RemoveNAME.startRemoveNAME(builder);
                    RemoveNAME.addValue(builder, valueOffset);
                    return RemoveNAME.endRemoveNAME(builder);
                }
            }
            blacklist.RemoveNAME = RemoveNAME;
        })(blacklist = proto.blacklist || (proto.blacklist = {}));
    })(proto = Mod.proto || (Mod.proto = {}));
})(Mod = exports.Mod || (exports.Mod = {}));
